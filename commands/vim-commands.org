* Track vim commands
* Vim Issues
** Can't use C-movement to leave netrw window

* Buffers
** opening
  - :new      # open new horz buffer
  - :enew     # open new buffer in current window
** selecting
  - :b#         # switch to other buffer (can open closed buffers)
  - :ls         # list buffers
  - :b<num>     # open buffer <num>
  - :bp         # open previous buffer
  - :bn         # open next buffer
** deleting
  - :bd#      # delete other buffer
  - :bw#      # wipeout other buffer
  - maybe try this plugin: https://github.com/moll/vim-bbye
* Moving around
** Screen position
  - zt        # current line to top
  - zz        # current line to middle
  - zb        # current line to bottom
  - z<CR>     # current line to top (cursor to beg of line)
  - z.        # current line to middle (cursor to beg of line)
  - z-        # current line to bottom (cursor to beg of line)
  - C-y       # scroll up w/o moving cursor
  - C-e       # scroll down w/o moving cursor
  - H         # move cursor to top
  - M         # move cursor to middle
  - L         # move cursor to bottom (last line)
* Search & Replace
** Highlighting
  - :noh      # cancel search highlight
** Replace
  - :[range]s/search/replace/g
  - :s/search/replace/          # single line, first matches
  - :s/search/replace/g         # single line, all matches
  - :%s/search/replace/g        # entire file, all matches
  - :8,10 s/search/replace/g    # lines 8-10, all matches
  - :%s/search/replace/gc       # ask for confirmation
** Regexp
  - \@=       # positive lookahead
  - \@!       # negative lookahead
  - \@<=      # positive lookbehind
  - \@<!      # negative lookbehind
  - :\@<!math   # all math not preceded by :
  - pane\>\@!   # pane not followed by a word break
** Multiline search
  - \n    a newline character (line ending)
  - \_s    a whitespace (space or tab) or newline character
  - \_^    the beginning of a line (zero width)
  - \_$    the end of a line (zero width)
  - \_.    any character including a newline
* Spelling
  - :setl spell   # enable spell checking
  - zg            # add word to spellfile
  - zw            # mark as wrong spelling in spellfile
  - z=            # get suggestions
  - C-X s         # get suggestions in insert mode
  - ]s            # next misspelled word
  - [s            # prev misspelled word
  - zug           # remove word from spellfile
  - zuw           # remove wrong spelling
* Vim splits
** Open/Close
   - C-w q # Close current window
** Sizing
   - C-w |   # max horz size
   - C-w _   # max vert size
   - C-w =   # normalize split sizes
   - C-w >   # increase width
   - C-w <   # decrease width
   - C-w +   # increase height
   - C-w -   # decrease height
   - TODO: How to set pane size to a number
** Navigate panes
   - C-w p    # goto previous window
   - C-w t    # goto top-left window
   - C-w b    # goto bottom-right window
   - C-w h    # move the (n-th) window to the left
   - C-w l    # move the (n-th) window to the right
   - C-w k    # move the (n-th) window up
   - C-w j    # move the (n-th) window down
** Change layout
   - C-w R    # rotate panes up/left
   - C-w r    # rotate panes down/right
   - C-w x    # swap with window on the right
   - C-w L    # move pane far right
   - C-w H    # move pane far left
   - C-w J    # move pane far bottom
   - C-w K    # move pane far top
   - :help window-moving
** Layout
   - C-w T    # break out split into new tab
   - C-w o    # close all other windows (in current tab)
* Formatting / Layout
  - gq        # reformat selection for line breaks
* Completions
  - C-n         # next completion
  - <tab>       # next completion
  - C-p         # prev completion
  - shift-<tab> # prev completion
  - C-y         # accept completion
  - C-e         # cancel completion
* vim-surround
  - cs"'        # change " to '
  - cs'<q>      # change ' to <q></q>
  - cst"        # change <q> to "
  - ds"         # delete surround "
  - ysiw]       # add ] arround iw word
  - ysiw[       # add [  ] with space

* changing case
  - crs         # to snake_case
  - crm         # to MakedCase
  - crc         # to camelCase
  - cru         # to UPPER_CASE
  - cr-         # to dash-case
  - cr.         # to dot.case
  - cr<space>   # to space case
  - crt         # to Title Case
* Searching, errors, and opening
** How to search using the quickfix list?
** How to find errors
* NetRW
** To open netrw
   - :Explore     # open in current folder
   - :Sexplore    # open in horz split
   - :Vexplore    # open in vert split
** View options
   - i                          # cycle view types
   - let g:netrw_liststyle = 3  # set style 3
   - let g:netrw_banner = 0     # disable banner
   - let g:netrw_winsize = 25   # drawer size
** Files
   - %        # create new file
* NERDtree
** Starting stopping
   - :NERDTreeToggle
** Modify files/directories
   - m      # menu - create file
** Opening files
   - o      # open file
   - s      # open in new vert split
   - i      # open in new horz split
   - g*     # open but leave cursor in NERDTree
** Directories
   - O      # recursively open directory
   - x      # close parent
   - X      # recursive close all children
   - e      # edit the current dir
** Root directory
   - P      # jump to root
   - p      # move to parent
   - K      # jump up inside directories at this depth
   - J      # jump down inside directories at this depth
   - C      # set dir as tree root
   - u      # move tree root up one
   - U      # u and leave old root open
* File handling
** How to open file in current folder?
   - :Explore
   - :e %:p:h <tab>
** Open file under cursor
  - gf      # open file under cursor; won't open missing file
  - gl      # open file/link under cursor; will open missing file utl.vim
** Copy filename and line number to system clipboard
   - :let @+=expand("%") . ':' . line(".")
* How to work with files in VIM
** :set hidden
      If you don't have this set already, then do so. It makes vim work like every
      other multiple-file editor on the planet. You can have edited buffers that
      aren't visible in a window somewhere.
** Use :bn, :bp, :b #, :b name, and ctrl-6 to switch between buffers. I like
      ctrl-6 myself (alone it switches to the previously used buffer, or #ctrl-6
      switches to buffer number #).
** Use :ls to list buffers, or a plugin like MiniBufExpl or BufExplorer.

** Buffer manipulation
  - :bp       # previous buffer in numeric order
  - :bn       # next buffer in numeric order
  - :ls       # list buffers (not hidden ones)
  - :b<n>     # open buffer <n>
  - :b#       # last used buffer
  - :bd#      # delete (last) buffer - still in history
  - :bw#      # wipeout (last) buffer - totally get rid of it
  - :%bd      # delete all buffers - opens a new empty buffer
  - :%bd:e#   # delete all buffers, reopen last file
  - :%bd:e#:bd#   # delete all buffers, reopen last file, close empty buffer
* Vim distraction free
** Manually
   - :vnew            # empty buffer new vert split
   - :new             # empty buffer new horz split
   - :enew            # empty buffer
   - :setl nonumber   # remove line numbers
   - C-W r    # rotate panes down/right
   - C-w x    # swap with window on the right
   - C-W H    # move pane far left
* Vim variables
  - set shiftwidth=2          # set value
  - setlocal shiftwidth=2     # set value for this buffer only
  - set shiftwidth?           # show value
  - verbose set shiftwidth?   # show where variable last set
  - set shiftwidth&           # restore default
  - setlocal shiftwidth&      # restore default
* vim-orgmode
** jceb/vim-orgmode
  - https://github.com/jceb/vim-orgmode
** localleader <ll>: ,
** tabs and stuff
  - <TAB>         # cycle visibility
  - S-<TAB>       # reverse cycle visibility
  - <ll>, / .     # cycle global visibility
  - <CR>          # (normal mode) insert heading below
  - >> or >ah     # lower heading
  - << or <ah     # raise heading
  - >ar <[[       # lower entire subtree
  - <ar >]]       # raise entire subtree
  - m} m{         # move heading up/down (not subtree)
  - m[\[ m]]       # move subtree up/down
  - yah           # yank heading
  - dah           # delete heading
  - yar           # yank subtree
  - dar           # delete subtree
** links
  - gl            # goto link
  - gyl           # yank link
  - gil           # insert new link
  - gn            # next link
  - go            # previous link
** todo
  - <ll>d         # open todo labeling window
  - <ll>dt        # set TODO
  - <ll>dd        # set DONE
  - <ll>ct        # next TODO state
** agenda
  - <ll>cat       # global TODO list
** timing
  - <ll>sa        # insert timestamp
  - <ll>si        # insert [inactive] timestamp
  - C-a           # increment timestamp value
  - C-x           # decrement timestamp value
  - <ll>pa        # insert timestamp with calendar
  - <ll>pi        # insert [inactive] timestamp with calendar
** movement
  - }, {          # next/prev heading
  - ]], [[        # next/prev heading same level
  - g{, g}        # up/down heading hierarchy
** checkboxes
  - <ll>cn cN     # insert checkbox below (above)
  - <ll>cc        # toggle checkbox


* Vim Tmux integrations
** https://github.com/jebaum/vim-tmuxify
  - <l>mp         # associate tmux pane with vim by number 0:9.2
  - <l>ms         # send selection to pane (or prompt)
  - <l>mk         # TxRun (like make)
  - <l>mt         # TxSetRunCmd (set make command for filetype % filepath)
  - <l>mc         # clear target pane
  - <l>mb         # send SIGINT to target pane
  - <l>mn         # create target pane
  - <l>mq         # close target pane
  - <l>mr         # send-keys to target pane
* Vim resources
** Overall tips
   - <https://www.cs.oberlin.edu/~kuperman/help/vim/home.html>
** Grep and search
   - https://robots.thoughtbot.com/faster-grepping-in-vim
   - https://seesparkbox.com/foundry/demystifying_multi_file_searches_in_vim_and_the_command_line








